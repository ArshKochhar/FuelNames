/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, BaseWalletLocked, AbstractAddress } from "fuels";
import { Interface, Contract } from "fuels";
import type {
  CounterContractAbi,
  CounterContractAbiInterface,
} from "../CounterContractAbi";
const _abi = [
  {
    type: "function",
    name: "get_name",
    inputs: [
      {
        type: "str[5]",
        name: "name",
      },
    ],
    outputs: [
      {
        type: "struct Address",
        name: "",
        components: [
          {
            type: "b256",
            name: "value",
          },
        ],
      },
    ],
  },
  {
    type: "function",
    name: "register",
    inputs: [
      {
        type: "struct Address",
        name: "address_owner",
        components: [
          {
            type: "b256",
            name: "value",
          },
        ],
      },
      {
        type: "str[5]",
        name: "name",
      },
    ],
    outputs: [
      {
        type: "()",
        name: "",
        components: [],
      },
    ],
  },
];

export class CounterContractAbi__factory {
  static readonly abi = _abi;
  static createInterface(): CounterContractAbiInterface {
    return new Interface(_abi) as unknown as CounterContractAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider
  ): CounterContractAbi {
    return new Contract(
      id,
      _abi,
      walletOrProvider
    ) as unknown as CounterContractAbi;
  }
}
